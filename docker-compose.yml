version: '3.9'

services:
  traefik:
    image: traefik:latest
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    command:
      # Enable tracing
      # - --tracing=true
      # Set docker as a provider
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      # Define default network
      - --providers.docker.network=traefik-network
      # Enable dashboard
      - --api.dashboard=true
      # Set log settings
      - --log.level=${LOG_LEVEL}
      - --accesslog=true
      - --accesslog.filePath=/var/log/traefik.log
      - --accesslog.bufferingsize=100
      - --accesslog.filters.statuscodes=400-599
      - --accesslog.filters.retryattempts
      - --accesslog.filters.minduration=100ms
      # Define diffrent endpoints
      - --entryPoints.smtp.address=:25
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entryPoints.mysql.address=:3306
      # Replace Default local cert for local dev
      - --providers.file.filename=/etc/traefik/dynamic.toml
      # Traefik Pilot
      - --pilot.token=${TRAEFIK_PILOT_TOKEN}
    ports:
      - "25:25"
      - "80:80"
      - "443:443"
      - "3306:3306"
    labels:
      # Traefik
      traefik.enable: true
      # Global Middlewares
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.middlewares.redirect-to-https.redirectscheme.permanent: "true"
      traefik.http.middlewares.whitelist-local-ips.ipwhitelist.sourcerange: 127.0.0.0/8, 172.0.0.0/8, 192.168.0.0/16
      # HTTP
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.rule: Host(`dashboard.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.dashboard.entryPoints: web
      traefik.http.routers.dashboard.middlewares: redirect-to-https,whitelist-local-ips
      # HTTPS
      traefik.http.routers.dashboard-ssl.tls: "true"
      traefik.http.routers.dashboard-ssl.service: api@internal
      traefik.http.routers.dashboard-ssl.rule: Host(`dashboard.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.dashboard-ssl.entryPoints: websecure
      traefik.http.routers.dashboard-ssl.middlewares: whitelist-local-ips
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/traefik.log:/var/log/traefik.log
      - ./certs/:/etc/certs/:ro
      - ./config/traefik/traefik-dynamic.toml:/etc/traefik/dynamic.toml:ro
    networks:
      traefik-network:

  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    labels:
      # Traefik
      traefik.enable: true
      # HTTP
      traefik.http.routers.portainer.service: portainer
      traefik.http.routers.portainer.rule: Host(`manage.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.portainer.entryPoints: web
      traefik.http.routers.portainer.middlewares: redirect-to-https,whitelist-local-ips
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      # HTTPS
      traefik.http.routers.portainer-ssl.tls: "true"
      traefik.http.routers.portainer-ssl.service: portainer
      traefik.http.routers.portainer-ssl.rule: Host(`manage.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.portainer-ssl.entryPoints: websecure
      traefik.http.routers.portainer-ssl.middlewares: whitelist-local-ips
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      traefik-network:

  whoami:
    image: traefik/whoami:latest
    restart: unless-stopped
    profiles: ["dev", "testing", "whoami"]
    labels:
      # Traefik
      traefik.enable: true
      # HTTP
      traefik.http.routers.whoami.service: whoami
      traefik.http.routers.whoami.rule: Host(`whoami.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.whoami.entryPoints: web
      traefik.http.routers.whoami.middlewares: redirect-to-https,whitelist-local-ips
      traefik.http.services.whoami.loadbalancer.server.port: 80
      # HTTPS
      traefik.http.routers.whoami-ssl.tls: "true"
      traefik.http.routers.whoami-ssl.service: whoami
      traefik.http.routers.whoami-ssl.rule: Host(`whoami.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.whoami-ssl.entryPoints: websecure
      traefik.http.routers.whoami-ssl.middlewares: whitelist-local-ips
    networks:
      traefik-network:

  mysql:
    image: mariadb:latest
    restart: unless-stopped
    profiles: ["dev", "database", "mariadb"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
    labels:
      # Traefik
      traefik.enable: true
      traefik.tcp.services.mariadb.loadbalancer.server.port: 3306
      # TCP
      traefik.tcp.routers.mariadb.rule: HostSNI(`mysql`)
      # traefik.tcp.routers.mariadb.priority: 999
      traefik.tcp.routers.mariadb.entryPoints: mysql
      traefik.tcp.routers.mariadb.service: "mariadb"
    volumes:
      - mysql-data:/var/lib/mysql:delegated
    networks:
      traefik-network:

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASS}
      PMA_ABSOLUTE_URI: phpmyadmin.${BASE_DOMAIN_NAME:-dev.localhost}
    labels:
      # Traefik
      traefik.enable: true
      # HTTP
      traefik.http.routers.phpmyadmin.service: phpmyadmin
      traefik.http.routers.phpmyadmin.rule: Host(`phpmyadmin.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.phpmyadmin.entryPoints: web
      traefik.http.routers.phpmyadmin.middlewares: redirect-to-https,whitelist-local-ips
      traefik.http.services.phpmyadmin.loadbalancer.server.port: 80
      # HTTPS
      traefik.http.routers.phpmyadmin-ssl.tls: "true"
      traefik.http.routers.phpmyadmin-ssl.service: phpmyadmin
      traefik.http.routers.phpmyadmin-ssl.rule: Host(`phpmyadmin.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.phpmyadmin-ssl.entryPoints: websecure
      traefik.http.routers.phpmyadmin-ssl.middlewares: whitelist-local-ips
    volumes:
      - ./config/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro
      - ./config/phpmyadmin/config.creds.inc.php:/etc/phpmyadmin/config.creds.inc.php:ro
      - ./config/phpmyadmin/phpmyadmin-misc.ini:/usr/local/etc/php/conf.d/phpmyadmin-misc.ini:ro
    networks:
      traefik-network:

  maildev:
    image: maildev/maildev:latest
    restart: unless-stopped
    environment:
      - MAILDEV_WEB_PORT=80
      - MAILDEV_SMTP_PORT=25
    healthcheck:
      interval: 10s
      timeout: 1s
      test: wget -O - http://localhost/healthz || exit 1
    labels:
      # Traefik
      traefik.enable: true
      # SMTP
      traefik.tcp.routers.smtp.rule: HostSNI(`*`)
      traefik.tcp.routers.smtp.entryPoints: smtp
      traefik.tcp.routers.smtp.service: "smtp"
      traefik.tcp.services.smtp.loadbalancer.server.port: 25
      # HTTP
      traefik.http.routers.maildev.service: maildev
      traefik.http.routers.maildev.rule: Host(`maildev.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.maildev.entryPoints: web
      traefik.http.routers.maildev.middlewares: redirect-to-https,whitelist-local-ips
      traefik.http.services.maildev.loadbalancer.server.port: 80
      # HTTPS
      traefik.http.routers.maildev-ssl.tls: "true"
      traefik.http.routers.maildev-ssl.service: maildev
      traefik.http.routers.maildev-ssl.rule: Host(`maildev.${BASE_DOMAIN_NAME:-dev.localhost}`)
      traefik.http.routers.maildev-ssl.entryPoints: websecure
      traefik.http.routers.maildev-ssl.middlewares: whitelist-local-ips
    networks:
      traefik-network:

volumes:
  mysql-data:
    external: true
  portainer-data:
    external: true

networks:
  traefik-network:
    external: true
    name: traefik-network
